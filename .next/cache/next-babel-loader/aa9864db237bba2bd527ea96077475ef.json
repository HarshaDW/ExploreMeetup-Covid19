{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nimport theme from '../src/theme';\nexport default class MyDocument extends Document {\n  render() {\n    return __jsx(\"html\", {\n      lang: \"en\"\n    }, __jsx(Head, null, __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: theme.palette.primary.main\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n    })), __jsx(\"body\", null, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n}\n\nMyDocument.getInitialProps = async ctx => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () => originalRenderPage({\n    enhanceApp: App => props => sheets.collect(__jsx(App, props))\n  });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread({}, initialProps, {\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()]\n  });\n};","map":{"version":3,"sources":["/Users/gapstars/Projects/nextMeetUp/ssrapp/ExploreMeetup-Covid19/pages/_document.js"],"names":["React","Document","Head","Main","NextScript","ServerStyleSheets","theme","MyDocument","render","palette","primary","main","getInitialProps","ctx","sheets","originalRenderPage","renderPage","enhanceApp","App","props","collect","initialProps","styles","Children","toArray","getStyleElement"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,eAAe,MAAMC,UAAN,SAAyBN,QAAzB,CAAkC;AAC/CO,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,MAAC,IAAD,QAEE;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAcC,OAAd,CAAsBC;AAAxD,MAFF,EAGE;AACE,MAAA,GAAG,EAAC,YADN;AAEE,MAAA,IAAI,EAAC;AAFP,MAHF,CADF,EASE,oBACE,MAAC,IAAD,OADF,EAEE,MAAC,UAAD,OAFF,CATF,CADF;AAgBD;;AAlB8C;;AAqBjDJ,UAAU,CAACK,eAAX,GAA6B,MAAOC,GAAP,IAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAMC,MAAM,GAAG,IAAIT,iBAAJ,EAAf;AACA,QAAMU,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEAH,EAAAA,GAAG,CAACG,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,IAAAA,UAAU,EAAGC,GAAD,IAAUC,KAAD,IAAWL,MAAM,CAACM,OAAP,CAAe,MAAC,GAAD,EAASD,KAAT,CAAf;AADf,GAAD,CADpB;;AAKA,QAAME,YAAY,GAAG,MAAMpB,QAAQ,CAACW,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,2BACKQ,YADL;AAEE;AACAC,IAAAA,MAAM,EAAE,CAAC,GAAGtB,KAAK,CAACuB,QAAN,CAAeC,OAAf,CAAuBH,YAAY,CAACC,MAApC,CAAJ,EAAiDR,MAAM,CAACW,eAAP,EAAjD;AAHV;AAKD,CAvCD","sourcesContent":["import React from 'react';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nimport theme from '../src/theme';\n\nexport default class MyDocument extends Document {\n  render() {\n    return (\n      <html lang=\"en\">\n        <Head>\n          {/* PWA primary color */}\n          <meta name=\"theme-color\" content={theme.palette.primary.main} />\n          <link\n            rel=\"stylesheet\"\n            href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n          />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </html>\n    );\n  }\n}\n\nMyDocument.getInitialProps = async (ctx) => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () =>\n    originalRenderPage({\n      enhanceApp: (App) => (props) => sheets.collect(<App {...props} />),\n    });\n\n  const initialProps = await Document.getInitialProps(ctx);\n\n  return {\n    ...initialProps,\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()],\n  };\n};"]},"metadata":{},"sourceType":"module"}