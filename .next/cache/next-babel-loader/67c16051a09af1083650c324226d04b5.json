{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ComposableMap, Geographies, Geography, Annotation } from \"react-simple-maps\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nexport default function WorldMap({\n  selectedCountry\n}) {\n  const classes = useStyles();\n  return __jsx(\"div\", null, __jsx(ComposableMap, {\n    projection: \"geoAzimuthalEqualArea\",\n    projectionConfig: {\n      rotate: [-20.0, -52.0, 0],\n      scale: 300\n    }\n  }, __jsx(Geographies, {\n    geography: geoUrl,\n    fill: \"#D6D6DA\",\n    stroke: \"#FFFFFF\",\n    strokeWidth: 0.5\n  }, ({\n    geographies\n  }) => geographies.map(geo => __jsx(Geography, {\n    key: geo.rsmKey,\n    geography: geo\n  }))), __jsx(Annotation, {\n    subject: [3.3522, 48.8566],\n    dx: -90,\n    dy: -30,\n    connectorProps: {\n      stroke: \"#FF5533\",\n      strokeWidth: 3,\n      strokeLinecap: \"round\"\n    }\n  }, __jsx(\"text\", {\n    x: \"-8\",\n    textAnchor: \"end\",\n    alignmentBaseline: \"middle\",\n    fill: \"#F53\"\n  }, selectedCountry ? selectedCountry.toString() : 'France'))));\n}","map":{"version":3,"sources":["/Users/gapstars/Projects/nextMeetUp/ssrapp/ExploreMeetup-Covid19/components/WorldMap.js"],"names":["React","makeStyles","ComposableMap","Geographies","Geography","Annotation","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","geoUrl","WorldMap","selectedCountry","classes","rotate","scale","geographies","map","geo","rsmKey","stroke","strokeWidth","strokeLinecap","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,UAAhD,QAAkE,mBAAlE;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GAD+B;AAIrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADJ;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC;AAHrB;AAJ8B,CAAL,CAAN,CAA5B;AAWA,MAAMC,MAAM,GACV,wGADF;AAGA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAAqC;AAClD,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,SACE,mBACE,MAAC,aAAD;AACE,IAAA,UAAU,EAAC,uBADb;AAEE,IAAA,gBAAgB,EAAE;AAChBgB,MAAAA,MAAM,EAAE,CAAC,CAAC,IAAF,EAAQ,CAAC,IAAT,EAAe,CAAf,CADQ;AAEhBC,MAAAA,KAAK,EAAE;AAFS;AAFpB,KAOE,MAAC,WAAD;AACE,IAAA,SAAS,EAAEL,MADb;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,MAAM,EAAC,SAHT;AAIE,IAAA,WAAW,EAAE;AAJf,KAMG,CAAC;AAAEM,IAAAA;AAAF,GAAD,KACCA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,IAAI,MAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,GAAG,CAACC,MAApB;AAA4B,IAAA,SAAS,EAAED;AAAvC,IAAvB,CAPJ,CAPF,EAiBE,MAAC,UAAD;AACE,IAAA,OAAO,EAAE,CAAC,MAAD,EAAS,OAAT,CADX;AAEE,IAAA,EAAE,EAAE,CAAC,EAFP;AAGE,IAAA,EAAE,EAAE,CAAC,EAHP;AAIE,IAAA,cAAc,EAAE;AACdE,MAAAA,MAAM,EAAE,SADM;AAEdC,MAAAA,WAAW,EAAE,CAFC;AAGdC,MAAAA,aAAa,EAAE;AAHD;AAJlB,KAUE;AAAM,IAAA,CAAC,EAAC,IAAR;AAAa,IAAA,UAAU,EAAC,KAAxB;AAA8B,IAAA,iBAAiB,EAAC,QAAhD;AAAyD,IAAA,IAAI,EAAC;AAA9D,KACGV,eAAe,GAACA,eAAe,CAACW,QAAhB,EAAD,GAA8B,QADhD,CAVF,CAjBF,CADF,CADF;AAoCD","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ComposableMap, Geographies, Geography, Annotation } from \"react-simple-maps\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nexport default function WorldMap({selectedCountry}) {\n  const classes = useStyles();\n  return (\n    <div>\n      <ComposableMap\n        projection=\"geoAzimuthalEqualArea\"\n        projectionConfig={{\n          rotate: [-20.0, -52.0, 0],\n          scale: 300\n        }}\n      >\n        <Geographies\n          geography={geoUrl}\n          fill=\"#D6D6DA\"\n          stroke=\"#FFFFFF\"\n          strokeWidth={0.5}\n        >\n          {({ geographies }) =>\n            geographies.map(geo => <Geography key={geo.rsmKey} geography={geo} />)\n          }\n        </Geographies>\n        <Annotation\n          subject={[3.3522, 48.8566]}\n          dx={-90}\n          dy={-30}\n          connectorProps={{\n            stroke: \"#FF5533\",\n            strokeWidth: 3,\n            strokeLinecap: \"round\"\n          }}\n        >\n          <text x=\"-8\" textAnchor=\"end\" alignmentBaseline=\"middle\" fill=\"#F53\">\n            {selectedCountry?selectedCountry.toString() : 'France'}\n          </text>\n        </Annotation>\n      </ComposableMap>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}